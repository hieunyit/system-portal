// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/openvpn/bulk/groups/actions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform actions on multiple groups (enable/disable)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Bulk Operations"
                ],
                "summary": "Bulk group actions",
                "parameters": [
                    {
                        "description": "Bulk group actions data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VpnBulkGroupActionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.VpnBulkGroupActionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/groups/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create multiple groups at once",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Bulk Operations"
                ],
                "summary": "Bulk create groups",
                "parameters": [
                    {
                        "description": "Bulk group creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VpnBulkCreateGroupsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.VpnBulkCreateGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/groups/import": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Import groups from CSV, JSON, or XLSX file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Bulk Operations"
                ],
                "summary": "Import groups from file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Groups file (CSV/JSON/XLSX)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "csv",
                            "json",
                            "xlsx"
                        ],
                        "type": "string",
                        "description": "File format",
                        "name": "format",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Dry run mode (validate only)",
                        "name": "dryRun",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Override existing groups",
                        "name": "override",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.VpnImportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/groups/template": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Download template file for group import",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "VPN Bulk Operations"
                ],
                "summary": "Export group template",
                "parameters": [
                    {
                        "enum": [
                            "csv",
                            "xlsx"
                        ],
                        "type": "string",
                        "default": "csv",
                        "description": "Template format",
                        "name": "format",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group template file",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/actions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform actions on multiple users (enable/disable/reset-otp)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Bulk Operations"
                ],
                "summary": "Bulk user actions",
                "parameters": [
                    {
                        "description": "Bulk user actions data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VpnBulkUserActionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.VpnBulkActionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create multiple users at once",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Bulk Operations"
                ],
                "summary": "Bulk create users",
                "parameters": [
                    {
                        "description": "Bulk user creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VpnBulkCreateUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.VpnBulkCreateUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "Request too large",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/disconnect": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Disconnect multiple users from VPN with business logic validation (user exists and is connected)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Bulk Operations"
                ],
                "summary": "Bulk disconnect multiple VPN users",
                "parameters": [
                    {
                        "description": "Bulk disconnect users request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VpnBulkDisconnectUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users disconnected successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.VpnDisconnectResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - validation error or no valid users",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing authentication",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to disconnect users",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/extend": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Extend expiration date for multiple users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Bulk Operations"
                ],
                "summary": "Bulk extend user expiration",
                "parameters": [
                    {
                        "description": "Bulk user extension data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VpnBulkUserExtendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.VpnBulkActionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/import": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Import users from CSV, JSON, or XLSX file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Bulk Operations"
                ],
                "summary": "Import users from file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Users file (CSV/JSON/XLSX)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "csv",
                            "json",
                            "xlsx"
                        ],
                        "type": "string",
                        "description": "File format",
                        "name": "format",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Dry run mode (validate only)",
                        "name": "dryRun",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Override existing users",
                        "name": "override",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.VpnImportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/template": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Download template file for user import",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "VPN Bulk Operations"
                ],
                "summary": "Export user template",
                "parameters": [
                    {
                        "enum": [
                            "csv",
                            "xlsx"
                        ],
                        "type": "string",
                        "default": "csv",
                        "description": "Template format",
                        "name": "format",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User template file",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/openvpn/config/network": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get comprehensive network configuration including client networks, VPN daemon settings, routing, and NAT configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Configuration"
                ],
                "summary": "Get network configuration",
                "responses": {
                    "200": {
                        "description": "Network configuration retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.VpnNetworkConfigResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing authentication",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to retrieve network config",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/config/server/info": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get basic server information including node type, ports, and cluster configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Configuration"
                ],
                "summary": "Get server information",
                "responses": {
                    "200": {
                        "description": "Server information retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.VpnServerInfoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing authentication",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to retrieve server info",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/groups": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List groups with pagination and filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Groups"
                ],
                "summary": "List groups",
                "parameters": [
                    {
                        "type": "string",
                        "name": "authMethod",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "groupName",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "role",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.VpnGroupListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new VPN user group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Groups"
                ],
                "summary": "Create a new group",
                "parameters": [
                    {
                        "description": "Group creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VpnCreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/groups/{groupName}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get group information by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Groups"
                ],
                "summary": "Get group by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.VpnGroupResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update group information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Groups"
                ],
                "summary": "Update group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VpnUpdateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete group by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Groups"
                ],
                "summary": "Delete group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/groups/{groupName}/{action}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Enable or disable a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Groups"
                ],
                "summary": "Perform action on group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Action (enable/disable)",
                        "name": "action",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a paginated list of users with comprehensive filtering options",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Users"
                ],
                "summary": "List users with enhanced filtering",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by username (supports partial match)",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email (supports partial match)",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ldap",
                            "local"
                        ],
                        "type": "string",
                        "description": "Filter by auth method",
                        "name": "authMethod",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Admin",
                            "User"
                        ],
                        "type": "string",
                        "description": "Filter by role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by group name",
                        "name": "groupName",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by enabled status",
                        "name": "isEnabled",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by access denial status",
                        "name": "denyAccess",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by MFA status",
                        "name": "mfaEnabled",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Users expiring after date (YYYY-MM-DD)",
                        "name": "userExpirationAfter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Users expiring before date (YYYY-MM-DD)",
                        "name": "userExpirationBefore",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Include expired users",
                        "name": "includeExpired",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Users expiring within X days",
                        "name": "expiringInDays",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by access control presence",
                        "name": "hasAccessControl",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by MAC address",
                        "name": "macAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by IP address",
                        "name": "ipAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search across username, email, group",
                        "name": "searchText",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "username",
                            "email",
                            "authMethod",
                            "role",
                            "groupName",
                            "userExpiration"
                        ],
                        "type": "string",
                        "default": "username",
                        "description": "Sort field",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page (max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Use exact matching instead of partial",
                        "name": "exactMatch",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Case sensitive search",
                        "name": "caseSensitive",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.VpnUserListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new VPN user (local or LDAP authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VpnCreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/users/expirations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get users that will expire in the specified number of days with complete user details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Users"
                ],
                "summary": "Get expiring users with full information",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 7,
                        "description": "Number of days to check for expiration",
                        "name": "days",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include already expired users",
                        "name": "includeExpired",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.VpnUserExpirationsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/users/{username}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Users"
                ],
                "summary": "Get user by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.VpnUserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VpnUpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a user and associated resources",
                "tags": [
                    "VPN Users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/users/{username}/disconnect": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Disconnect a specific user from VPN with business logic validation (user exists and is connected)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Users"
                ],
                "summary": "Disconnect a single VPN user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username to disconnect",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disconnect user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VpnDisconnectUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User disconnected successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.VpnDisconnectResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - user not found or not connected",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing authentication",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found in system",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to disconnect user",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/users/{username}/{action}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform actions like enable, disable, reset-otp, change-password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Users"
                ],
                "summary": "Perform user action",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "enable",
                            "disable",
                            "reset-otp",
                            "change-password"
                        ],
                        "type": "string",
                        "description": "Action",
                        "name": "action",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Required only for change-password action",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.VpnChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/vpn/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed VPN server status including all connected users with their public IPs, connection times, countries, and traffic statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Status"
                ],
                "summary": "Get comprehensive VPN server status",
                "responses": {
                    "200": {
                        "description": "Successful response with VPN status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.VpnStatusResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing authentication",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to retrieve VPN status",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/audit/logs/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export audit logs as CSV file",
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "Audit"
                ],
                "summary": "Export audit logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by group",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by IP address",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Start date",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "End date",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CSV file",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/audit/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Statistics summary of audit logs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audit"
                ],
                "summary": "Audit statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by group",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by IP address",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Start date",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "End date",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/connections/ldap": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve LDAP connection settings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Get LDAP connection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.LDAPConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing LDAP connection settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Update LDAP connection",
                "parameters": [
                    {
                        "description": "LDAP config",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LDAPConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create LDAP connection settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Create LDAP connection",
                "parameters": [
                    {
                        "description": "LDAP config",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LDAPConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove LDAP connection settings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Delete LDAP connection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/connections/ldap/test": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Test connectivity to the LDAP server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Test LDAP connection",
                "parameters": [
                    {
                        "description": "LDAP config",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LDAPConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/connections/openvpn": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve OpenVPN connection settings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Get OpenVPN connection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.OpenVPNConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing OpenVPN connection settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Update OpenVPN connection",
                "parameters": [
                    {
                        "description": "OpenVPN config",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OpenVPNConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create OpenVPN connection settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Create OpenVPN connection",
                "parameters": [
                    {
                        "description": "OpenVPN config",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OpenVPNConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove OpenVPN connection settings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Delete OpenVPN connection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/connections/openvpn/test": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Test connectivity to the OpenVPN server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Test OpenVPN connection",
                "parameters": [
                    {
                        "description": "OpenVPN config",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OpenVPNConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/connections/smtp": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve SMTP server settings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Get SMTP configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.SMTPConfig"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update SMTP server configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Update SMTP configuration",
                "parameters": [
                    {
                        "description": "SMTP config",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SMTPConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create SMTP server configuration in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Create SMTP configuration",
                "parameters": [
                    {
                        "description": "SMTP config",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SMTPConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove SMTP configuration from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Delete SMTP configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/connections/templates/{action}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve an email template for the given action",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Get email template by action",
                "parameters": [
                    {
                        "type": "string",
                        "description": "action",
                        "name": "action",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.EmailTemplate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update subject or body of a template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connections"
                ],
                "summary": "Update email template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "action",
                        "name": "action",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "template",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmailTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/dashboard/activities": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Latest portal activities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Recent activities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.AuditResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/dashboard/charts/activities": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Chart statistics of portal activities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Activity chart data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/dashboard/charts/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Chart statistics of user registrations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "User chart data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/dashboard/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Overall portal statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Dashboard statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.StatsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/groups": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new portal group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portal Groups"
                ],
                "summary": "Create portal group",
                "parameters": [
                    {
                        "description": "Group data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.PortalGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/groups/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get portal group by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portal Groups"
                ],
                "summary": "Get portal group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.PortalGroup"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update information for a portal group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portal Groups"
                ],
                "summary": "Update portal group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.PortalGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a portal group",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portal Groups"
                ],
                "summary": "Delete portal group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/groups/{id}/permissions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve permissions assigned to a specific group",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permissions for a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the set of permissions assigned to a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Update group permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permission IDs",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.updatePermsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/permissions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "List permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Create permission",
                "parameters": [
                    {
                        "description": "Permission data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Permission"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/permissions/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Update permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permission data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a permission by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/users": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new portal user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portal Users"
                ],
                "summary": "Create portal user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PortalUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get portal user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portal Users"
                ],
                "summary": "Get portal user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PortalUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update information for a portal user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portal Users"
                ],
                "summary": "Update portal user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PortalUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a portal user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portal Users"
                ],
                "summary": "Delete portal user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/users/{id}/activate": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Activate a portal user account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portal Users"
                ],
                "summary": "Activate portal user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/users/{id}/deactivate": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Disable a portal user account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portal Users"
                ],
                "summary": "Deactivate portal user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/portal/users/{id}/reset-password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Reset the password of a portal user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portal Users"
                ],
                "summary": "Reset portal user password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate a user and issue JWT tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Invalidate the current session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "logged out",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Issue a new access token using a refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/validate": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Validate an access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Validate token",
                "responses": {
                    "200": {
                        "description": "token valid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AuditResponse": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "dto.BulkGroupOperationResult": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GROUP"
                },
                "message": {
                    "type": "string",
                    "example": "Group created successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "dto.BulkUserOperationResult": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "User created successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "username": {
                    "type": "string",
                    "example": "testuser"
                }
            }
        },
        "dto.ConnectedUserResponse": {
            "type": "object",
            "properties": {
                "bytes_received": {
                    "type": "integer",
                    "example": 1048576
                },
                "bytes_sent": {
                    "type": "integer",
                    "example": 2097152
                },
                "client_id": {
                    "type": "string",
                    "example": "5"
                },
                "common_name": {
                    "type": "string",
                    "example": "user123"
                },
                "connected_since": {
                    "type": "string",
                    "example": "2025-06-14T14:30:25Z"
                },
                "connected_since_unix": {
                    "type": "integer",
                    "example": 1749910225
                },
                "connection_duration": {
                    "type": "string",
                    "example": "37m41s"
                },
                "country": {
                    "type": "string",
                    "example": "Vietnam"
                },
                "data_channel_cipher": {
                    "type": "string",
                    "example": "AES-256-GCM"
                },
                "peer_id": {
                    "type": "string",
                    "example": "12"
                },
                "real_address": {
                    "type": "string",
                    "example": "203.113.45.123"
                },
                "username": {
                    "type": "string",
                    "example": "user123"
                },
                "virtual_address": {
                    "type": "string",
                    "example": "172.27.232.15"
                },
                "virtual_ipv6_address": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "dto.CreateGroupRequest": {
            "type": "object",
            "required": [
                "authMethod",
                "groupName"
            ],
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authMethod": {
                    "type": "string",
                    "enum": [
                        "ldap",
                        "local"
                    ]
                },
                "groupName": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "groupRange": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupSubnet": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "User",
                        "Admin"
                    ]
                }
            }
        },
        "dto.CreateUserRequest": {
            "type": "object",
            "required": [
                "authMethod",
                "email",
                "ipAssignMode",
                "macAddresses",
                "userExpiration",
                "username"
            ],
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "192.168.1.0/24"
                    ]
                },
                "authMethod": {
                    "type": "string",
                    "enum": [
                        "ldap",
                        "local"
                    ],
                    "example": "local"
                },
                "email": {
                    "type": "string",
                    "example": "testuser@example.com"
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GR"
                },
                "ipAddress": {
                    "type": "string",
                    "example": "10.0.0.10"
                },
                "ipAssignMode": {
                    "type": "string",
                    "enum": [
                        "dynamic",
                        "static"
                    ],
                    "example": "static"
                },
                "macAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "5E:CD:C9:D4:88:65"
                    ]
                },
                "password": {
                    "type": "string",
                    "example": "SecurePass123!"
                },
                "userExpiration": {
                    "type": "string",
                    "example": "31/12/2024"
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3,
                    "example": "testuser"
                }
            }
        },
        "dto.EmailTemplateRequest": {
            "type": "object",
            "required": [
                "body",
                "subject"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "dto.FilterMetadata": {
            "type": "object",
            "properties": {
                "appliedFilters": {
                    "description": "List of applied filters",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "username",
                        "authMethod",
                        "isEnabled"
                    ]
                },
                "filterCount": {
                    "description": "Number of active filters",
                    "type": "integer",
                    "example": 3
                },
                "sortOrder": {
                    "description": "Current sort order",
                    "type": "string",
                    "example": "asc"
                },
                "sortedBy": {
                    "description": "Current sort field",
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "dto.GroupResponse": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authMethod": {
                    "type": "string"
                },
                "denyAccess": {
                    "type": "boolean"
                },
                "groupName": {
                    "type": "string"
                },
                "groupRange": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupSubnet": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "dto.ImportValidationError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "example": "email"
                },
                "message": {
                    "type": "string",
                    "example": "Invalid email format"
                },
                "row": {
                    "type": "integer",
                    "example": 3
                },
                "value": {
                    "type": "string",
                    "example": "invalid-email"
                }
            }
        },
        "dto.LDAPConfigRequest": {
            "type": "object",
            "required": [
                "baseDN",
                "bindDN",
                "bindPassword",
                "host",
                "port"
            ],
            "properties": {
                "baseDN": {
                    "type": "string"
                },
                "bindDN": {
                    "type": "string"
                },
                "bindPassword": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.OpenVPNConfigRequest": {
            "type": "object",
            "required": [
                "host",
                "password",
                "port",
                "username"
            ],
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.PortalUserRequest": {
            "type": "object",
            "required": [
                "email",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.PortalUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.RefreshRequest": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "dto.SMTPConfigRequest": {
            "type": "object",
            "required": [
                "from",
                "host",
                "port"
            ],
            "properties": {
                "from": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "tls": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.StatsResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "integer"
                }
            }
        },
        "dto.TokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "dto.UserConnectionInfo": {
            "type": "object",
            "properties": {
                "connected_since": {
                    "type": "string",
                    "example": "2025-06-14T14:30:25Z"
                },
                "country": {
                    "type": "string",
                    "example": "Vietnam"
                },
                "real_address": {
                    "type": "string",
                    "example": "203.113.45.123"
                },
                "username": {
                    "type": "string",
                    "example": "testuser1"
                },
                "virtual_address": {
                    "type": "string",
                    "example": "172.27.232.15"
                }
            }
        },
        "dto.UserExpirationInfo": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authMethod": {
                    "type": "string"
                },
                "daysUntilExpiry": {
                    "description": "Số ngày còn lại",
                    "type": "integer"
                },
                "denyAccess": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "expirationStatus": {
                    "description": "\"expired\", \"expiring\", \"warning\"",
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "macAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                },
                "userExpiration": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserFilter": {
            "type": "object",
            "properties": {
                "authMethod": {
                    "type": "string",
                    "enum": [
                        "ldap",
                        "local"
                    ],
                    "example": "local"
                },
                "caseSensitive": {
                    "description": "Case sensitive search",
                    "type": "boolean",
                    "example": false
                },
                "denyAccess": {
                    "description": "Filter by access denial status",
                    "type": "boolean",
                    "example": false
                },
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "exactMatch": {
                    "description": "NEW: Search options",
                    "type": "boolean",
                    "example": false
                },
                "expiringInDays": {
                    "description": "Users expiring within X days",
                    "type": "integer",
                    "minimum": 0,
                    "example": 7
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GR"
                },
                "hasAccessControl": {
                    "description": "NEW: Advanced filters",
                    "type": "boolean",
                    "example": true
                },
                "includeExpired": {
                    "description": "Include expired users",
                    "type": "boolean",
                    "example": true
                },
                "ipAddress": {
                    "type": "string",
                    "example": "10.10.10.10"
                },
                "isEnabled": {
                    "description": "NEW: Status filters",
                    "type": "boolean",
                    "example": true
                },
                "limit": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 20
                },
                "macAddress": {
                    "description": "Filter by MAC address",
                    "type": "string",
                    "example": "5E:CD:C9:D4:88:65"
                },
                "mfaEnabled": {
                    "description": "Filter by MFA status",
                    "type": "boolean",
                    "example": true
                },
                "page": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Admin",
                        "User"
                    ],
                    "example": "User"
                },
                "searchText": {
                    "description": "Search across username, email, group",
                    "type": "string",
                    "minLength": 2,
                    "example": "john"
                },
                "sortBy": {
                    "description": "Enhanced sorting \u0026 pagination",
                    "type": "string",
                    "enum": [
                        "username",
                        "email",
                        "authMethod",
                        "role",
                        "groupName",
                        "userExpiration"
                    ],
                    "example": "username"
                },
                "sortOrder": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "example": "asc"
                },
                "userExpirationAfter": {
                    "description": "NEW: Expiration filters",
                    "type": "string",
                    "example": "2025-06-17"
                },
                "userExpirationBefore": {
                    "description": "Users expiring before date",
                    "type": "string",
                    "example": "2025-06-22"
                },
                "username": {
                    "description": "Basic filters (existing)",
                    "type": "string",
                    "example": "testuser"
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "192.168.1.0/24"
                    ]
                },
                "authMethod": {
                    "type": "string",
                    "example": "local"
                },
                "daysUntilExpiration": {
                    "description": "Days until expiration (-1 if expired)",
                    "type": "integer",
                    "example": 30
                },
                "denyAccess": {
                    "type": "boolean",
                    "example": false
                },
                "email": {
                    "type": "string",
                    "example": "testuser@example.com"
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GR"
                },
                "ipAddress": {
                    "type": "string",
                    "example": "10.0.0.10"
                },
                "isEnabled": {
                    "description": "NEW: Computed fields for enhanced filtering",
                    "type": "boolean",
                    "example": true
                },
                "isExpired": {
                    "description": "Whether user is past expiration",
                    "type": "boolean",
                    "example": false
                },
                "macAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "5E:CD:C9:D4:88:65"
                    ]
                },
                "mfa": {
                    "type": "boolean",
                    "example": true
                },
                "role": {
                    "type": "string",
                    "example": "User"
                },
                "userExpiration": {
                    "type": "string",
                    "example": "31/12/2024"
                },
                "username": {
                    "type": "string",
                    "example": "testuser"
                }
            }
        },
        "dto.UserValidationError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "User is not currently connected"
                },
                "username": {
                    "type": "string",
                    "example": "testuser1"
                }
            }
        },
        "dto.VpnBulkActionResponse": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer",
                    "example": 2
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.BulkUserOperationResult"
                    }
                },
                "success": {
                    "type": "integer",
                    "example": 8
                },
                "total": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "dto.VpnBulkCreateGroupsRequest": {
            "type": "object",
            "required": [
                "groups"
            ],
            "properties": {
                "groups": {
                    "type": "array",
                    "maxItems": 50,
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/dto.CreateGroupRequest"
                    }
                }
            }
        },
        "dto.VpnBulkCreateGroupsResponse": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer",
                    "example": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.BulkGroupOperationResult"
                    }
                },
                "success": {
                    "type": "integer",
                    "example": 4
                },
                "total": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "dto.VpnBulkCreateUsersRequest": {
            "type": "object",
            "required": [
                "users"
            ],
            "properties": {
                "users": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/dto.CreateUserRequest"
                    }
                }
            }
        },
        "dto.VpnBulkCreateUsersResponse": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer",
                    "example": 2
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.BulkUserOperationResult"
                    }
                },
                "success": {
                    "type": "integer",
                    "example": 8
                },
                "total": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "dto.VpnBulkDisconnectUsersRequest": {
            "type": "object",
            "required": [
                "usernames"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "Maintenance disconnect"
                },
                "usernames": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"testuser1\"",
                        " \"testuser2\"]"
                    ]
                }
            }
        },
        "dto.VpnBulkGroupActionResponse": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer",
                    "example": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.BulkGroupOperationResult"
                    }
                },
                "success": {
                    "type": "integer",
                    "example": 4
                },
                "total": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "dto.VpnBulkGroupActionsRequest": {
            "type": "object",
            "required": [
                "action",
                "groupNames"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                },
                "groupNames": {
                    "type": "array",
                    "maxItems": 50,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.VpnBulkUserActionsRequest": {
            "type": "object",
            "required": [
                "action",
                "usernames"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable",
                        "reset-otp"
                    ]
                },
                "usernames": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.VpnBulkUserExtendRequest": {
            "type": "object",
            "required": [
                "newExpiration",
                "usernames"
            ],
            "properties": {
                "newExpiration": {
                    "type": "string"
                },
                "usernames": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.VpnChangePasswordRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "NewSecurePass123!"
                }
            }
        },
        "dto.VpnCreateGroupRequest": {
            "type": "object",
            "required": [
                "authMethod",
                "groupName"
            ],
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authMethod": {
                    "type": "string",
                    "enum": [
                        "ldap",
                        "local"
                    ]
                },
                "groupName": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "groupRange": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupSubnet": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "User",
                        "Admin"
                    ]
                }
            }
        },
        "dto.VpnCreateUserRequest": {
            "type": "object",
            "required": [
                "authMethod",
                "email",
                "ipAssignMode",
                "macAddresses",
                "userExpiration",
                "username"
            ],
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "192.168.1.0/24"
                    ]
                },
                "authMethod": {
                    "type": "string",
                    "enum": [
                        "ldap",
                        "local"
                    ],
                    "example": "local"
                },
                "email": {
                    "type": "string",
                    "example": "testuser@example.com"
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GR"
                },
                "ipAddress": {
                    "type": "string",
                    "example": "10.0.0.10"
                },
                "ipAssignMode": {
                    "type": "string",
                    "enum": [
                        "dynamic",
                        "static"
                    ],
                    "example": "static"
                },
                "macAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "5E:CD:C9:D4:88:65"
                    ]
                },
                "password": {
                    "type": "string",
                    "example": "SecurePass123!"
                },
                "userExpiration": {
                    "type": "string",
                    "example": "31/12/2024"
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3,
                    "example": "testuser"
                }
            }
        },
        "dto.VpnDisconnectResponse": {
            "type": "object",
            "properties": {
                "connection_info": {
                    "$ref": "#/definitions/dto.UserConnectionInfo"
                },
                "count": {
                    "type": "integer",
                    "example": 2
                },
                "disconnected_users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"testuser1\"",
                        " \"testuser2\"]"
                    ]
                },
                "message": {
                    "type": "string",
                    "example": "Users disconnected successfully"
                },
                "skipped_users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"offline_user\"]"
                    ]
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "total_requested": {
                    "type": "integer",
                    "example": 3
                },
                "validation_errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserValidationError"
                    }
                }
            }
        },
        "dto.VpnDisconnectUserRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "Session terminated by administrator"
                }
            }
        },
        "dto.VpnGroupListResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GroupResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.VpnGroupResponse": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authMethod": {
                    "type": "string"
                },
                "denyAccess": {
                    "type": "boolean"
                },
                "groupName": {
                    "type": "string"
                },
                "groupRange": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupSubnet": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "dto.VpnImportResponse": {
            "type": "object",
            "properties": {
                "dryRun": {
                    "type": "boolean",
                    "example": false
                },
                "failureCount": {
                    "type": "integer",
                    "example": 5
                },
                "invalidRecords": {
                    "type": "integer",
                    "example": 5
                },
                "processedRecords": {
                    "type": "integer",
                    "example": 95
                },
                "results": {
                    "description": "BulkCreateUsersResponse or BulkCreateGroupsResponse"
                },
                "successCount": {
                    "type": "integer",
                    "example": 90
                },
                "total": {
                    "type": "integer",
                    "example": 100
                },
                "validRecords": {
                    "type": "integer",
                    "example": 95
                },
                "validationErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ImportValidationError"
                    }
                }
            }
        },
        "dto.VpnNetworkConfigResponse": {
            "type": "object",
            "properties": {
                "allow_private_nets6_to_clients": {
                    "type": "boolean",
                    "example": true
                },
                "allow_private_nets_to_clients": {
                    "description": "Advanced Network Settings",
                    "type": "boolean",
                    "example": true
                },
                "client_netmask_bits": {
                    "type": "string",
                    "example": "20"
                },
                "client_network": {
                    "description": "Client Network Settings",
                    "type": "string",
                    "example": "172.27.224.0"
                },
                "group_pool": {
                    "type": "string",
                    "example": "172.27.240.0/20"
                },
                "inter_client": {
                    "type": "boolean",
                    "example": false
                },
                "listen_ip": {
                    "type": "string",
                    "example": "all"
                },
                "message": {
                    "type": "string",
                    "example": "Network config retrieved successfully"
                },
                "mss_fix": {
                    "type": "string",
                    "example": "1350"
                },
                "mtu": {
                    "description": "Network Performance",
                    "type": "string",
                    "example": "1420"
                },
                "nat6_enabled": {
                    "type": "boolean",
                    "example": true
                },
                "nat6_masquerade": {
                    "type": "boolean",
                    "example": false
                },
                "nat_enabled": {
                    "description": "NAT Settings",
                    "type": "boolean",
                    "example": true
                },
                "nat_masquerade": {
                    "type": "boolean",
                    "example": false
                },
                "osi_layer": {
                    "type": "string",
                    "example": "3"
                },
                "private_access": {
                    "type": "string",
                    "example": "no"
                },
                "protocol": {
                    "type": "string",
                    "example": "tcp"
                },
                "reroute_dns": {
                    "type": "boolean",
                    "example": true
                },
                "reroute_gateway": {
                    "description": "Routing Settings",
                    "type": "boolean",
                    "example": true
                },
                "server_ip": {
                    "type": "string",
                    "example": "all"
                },
                "status": {
                    "description": "Status",
                    "type": "string",
                    "example": "optimal"
                },
                "tcp_port": {
                    "description": "VPN Daemon Settings",
                    "type": "string",
                    "example": "443"
                },
                "udp_port": {
                    "type": "string",
                    "example": "1194"
                }
            }
        },
        "dto.VpnServerInfoResponse": {
            "type": "object",
            "properties": {
                "admin_ip_address": {
                    "type": "string",
                    "example": "all"
                },
                "admin_port": {
                    "type": "string",
                    "example": "943"
                },
                "client_ip_address": {
                    "type": "string",
                    "example": "all"
                },
                "client_port": {
                    "type": "string",
                    "example": "943"
                },
                "cluster_mode": {
                    "type": "string",
                    "example": "False"
                },
                "failover_mode": {
                    "type": "string",
                    "example": "none"
                },
                "license_server": {
                    "type": "string",
                    "example": "licensing.openvpn.net:443"
                },
                "message": {
                    "type": "string",
                    "example": "Server info retrieved successfully"
                },
                "node_type": {
                    "type": "string",
                    "example": "PRIMARY"
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                },
                "web_server_name": {
                    "type": "string",
                    "example": "OpenVPN-AS"
                }
            }
        },
        "dto.VpnStatusResponse": {
            "type": "object",
            "properties": {
                "connected_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ConnectedUserResponse"
                    }
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-06-14T15:08:06Z"
                },
                "total_connected_users": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "dto.VpnUpdateGroupRequest": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "denyAccess": {
                    "type": "boolean"
                },
                "groupRange": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupSubnet": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "User",
                        "Admin"
                    ]
                }
            }
        },
        "dto.VpnUpdateUserRequest": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "192.168.1.0/24"
                    ]
                },
                "denyAccess": {
                    "type": "boolean",
                    "example": false
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GR"
                },
                "ipAddress": {
                    "type": "string",
                    "example": "10.0.0.10"
                },
                "ipAssignMode": {
                    "type": "string",
                    "enum": [
                        "dynamic",
                        "static"
                    ],
                    "example": "static"
                },
                "macAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "5E:CD:C9:D4:88:65"
                    ]
                },
                "userExpiration": {
                    "type": "string",
                    "example": "31/12/2025"
                }
            }
        },
        "dto.VpnUserExpirationsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "days": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserExpirationInfo"
                    }
                }
            }
        },
        "dto.VpnUserListResponse": {
            "type": "object",
            "properties": {
                "filters": {
                    "description": "NEW: Applied filters",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserFilter"
                        }
                    ]
                },
                "limit": {
                    "type": "integer",
                    "example": 20
                },
                "metadata": {
                    "description": "NEW: Filter metadata",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.FilterMetadata"
                        }
                    ]
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 50
                },
                "totalPages": {
                    "description": "NEW: Total pages",
                    "type": "integer",
                    "example": 3
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                }
            }
        },
        "dto.VpnUserResponse": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "192.168.1.0/24"
                    ]
                },
                "authMethod": {
                    "type": "string",
                    "example": "local"
                },
                "daysUntilExpiration": {
                    "description": "Days until expiration (-1 if expired)",
                    "type": "integer",
                    "example": 30
                },
                "denyAccess": {
                    "type": "boolean",
                    "example": false
                },
                "email": {
                    "type": "string",
                    "example": "testuser@example.com"
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GR"
                },
                "ipAddress": {
                    "type": "string",
                    "example": "10.0.0.10"
                },
                "isEnabled": {
                    "description": "NEW: Computed fields for enhanced filtering",
                    "type": "boolean",
                    "example": true
                },
                "isExpired": {
                    "description": "Whether user is past expiration",
                    "type": "boolean",
                    "example": false
                },
                "macAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "5E:CD:C9:D4:88:65"
                    ]
                },
                "mfa": {
                    "type": "boolean",
                    "example": true
                },
                "role": {
                    "type": "string",
                    "example": "User"
                },
                "userExpiration": {
                    "type": "string",
                    "example": "31/12/2024"
                },
                "username": {
                    "type": "string",
                    "example": "testuser"
                }
            }
        },
        "entities.EmailTemplate": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entities.LDAPConfig": {
            "type": "object",
            "properties": {
                "baseDN": {
                    "type": "string"
                },
                "bindDN": {
                    "type": "string"
                },
                "bindPassword": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entities.OpenVPNConfig": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entities.Permission": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                }
            }
        },
        "entities.PortalGroup": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Permission"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entities.SMTPConfig": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "tls": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.updatePermsRequest": {
            "type": "object",
            "properties": {
                "permission_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string"
                        },
                        "details": {},
                        "message": {
                            "type": "string"
                        },
                        "status": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "response.SuccessResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "object",
                    "properties": {
                        "data": {},
                        "message": {
                            "type": "string"
                        },
                        "status": {
                            "type": "integer"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "System Portal API",
	Description:      "API quản lý OpenVPN, Authentication, Portal...",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
